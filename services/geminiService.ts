import { GoogleGenAI, Modality } from "@google/genai";

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
  throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });
const model = 'gemini-2.5-flash-image-preview';

const callGeminiImageAPI = async (base64ImageData: string, mimeType: string, prompt: string): Promise<string> => {
  try {
    const response = await ai.models.generateContent({
      model,
      contents: {
        parts: [
          { inlineData: { data: base64ImageData, mimeType } },
          { text: prompt },
        ],
      },
      config: {
        responseModalities: [Modality.IMAGE, Modality.TEXT],
      },
    });

    for (const part of response.candidates[0].content.parts) {
      if (part.inlineData) {
        return `data:${part.inlineData.mimeType};base64,${part.inlineData.data}`;
      }
    }
    
    throw new Error("No image was generated by the API.");

  } catch (error) {
    console.error("Error communicating with Gemini API:", error);
    const errorMessage = error instanceof Error ? error.message : "An unknown error occurred.";
    return Promise.reject(new Error(`API Error: ${errorMessage}`));
  }
};

export const generatePoster = (base64ImageData: string, mimeType: string, prompt: string): Promise<string> => {
    return callGeminiImageAPI(base64ImageData, mimeType, prompt);
};

export const adjustPoster = (base64ImageData: string, mimeType: string, adjustPrompt: string): Promise<string> => {
    const prompt = `Based on the user's request, adjust the following image. The user wants: "${adjustPrompt}". Apply this change while maintaining the overall WWI poster art style.`;
    return callGeminiImageAPI(base64ImageData, mimeType, prompt);
};

export const upscalePoster = (base64ImageData: string, mimeType: string): Promise<string> => {
    const prompt = "Upscale this image to a higher resolution. Enhance the details, clarity, and sharpness, but faithfully maintain the original WWI propaganda poster art style, colors, and composition. Do not add or change any content.";
    return callGeminiImageAPI(base64ImageData, mimeType, prompt);
};